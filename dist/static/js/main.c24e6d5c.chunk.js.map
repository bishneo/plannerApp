{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","profile","react_default","a","createElement","className","NavLink","to","id","initials","onClick","SignedOutLinks","state","firebase","links","isEmpty","layout_SignedOutLinks","layout_SignedInLinks","Link","Notifications","notifications","map","notif","key","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","format","ProjectList","projects","p","projects_ProjectSummary","Dashboard","_this$props","this","uid","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","console","log","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","fireStore","authId","add","objectSpread","authorId","Date","RouteContainer","posed","div","enter","opacity","delay","beforeChildren","exit","App","BrowserRouter","layout_Navbar","Route","render","location","react_pose_es","pathname","Switch","exact","path","component","ProjectDetails","Boolean","window","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c24e6d5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { signOut, profile } = props\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/createProject' id='createPlan' className='btn btn-floating blue lighten-1 pulse'>\r\n                    <i className=\"material-icons\">create</i>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className='btn btn-floating pink lighten-1'>{profile.initials}</NavLink>\r\n            </li>\r\n            <li><a onClick={signOut}>Sign Out</a>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.isEmpty ? <SignedOutLinks /> : <SignedInLinks profile={profile} />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-4\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>\r\n                    <i className=\"material-icons planner-logo prefix\">calendar_today</i>\r\n                    <span className=\"planner-text\">Planner</span>\r\n                </Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card grey darken-4 white-text z-depth-1\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className='notifications'>\r\n                        {notifications && notifications.map((notif) => {\r\n                            return (\r\n                                <li key={notif.id}>\r\n                                    <span className=\"pink-text\">{notif.user} </span>\r\n                                    <span>{notif.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notif.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-1 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <span>Posted by </span>\r\n                <span className='pink-text'>{project.authorFirstName} {project.authorLastName}</span>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).format('MMMM Do YYYY, hh:mm a')}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(p => {\r\n                return (\r\n                    <Link to={'/project/' + p.id}>\r\n                        <ProjectSummary project={p} key={p.id} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        //console.log(this.props)\r\n        const { projects, auth, notifications } = this.props\r\n        if (!auth.uid) {\r\n            return <Redirect to='/signIn' />\r\n        }\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ]))(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props\r\n    if (!auth.uid) {\r\n        return <Redirect to='signIn' />\r\n    }\r\n    else if (project) {\r\n        return (\r\n            <div className=\"container sections project-details\">\r\n                <div className=\"card depth-z-1\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).format('MMMM Do YYYY, hh:mm a')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'projects'\r\n        }\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l6 offset-l3\">\r\n                        <form onSubmit={this.handleSubmit} className=\"z-depth-1 white\">\r\n                            <h2 className=\"grey-text text-darken-3\">Sign In</h2>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <button className=\"btn pink lighten-1 z-depth-0\">LogIn</button>\r\n                                <div className=\"red-text center\">\r\n                                    {authError ? <p>{authError}</p> : null}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l6 offset-l3\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white z-depth-1\">\r\n                            <h2 className=\"grey-text text-darken-3\">Sign Up</h2>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input type='text' id='lastName' onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field center\">\r\n                                <button className=\"btn waves-effect pink lighten-1\">Sign Up</button>\r\n                                <p className=\"red-text center text-darken-3\">{authError}</p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) {\r\n            return <Redirect to='signIn' />\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l8 offset-l2\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white z-depth-1\">\r\n                            <h2 className=\"grey-text text-darken-3\">Create Plan</h2>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"title\">Ttile</label>\r\n                                <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"title\">Project Content</label>\r\n                                <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                            </div>\r\n                            <div className=\"input-field center\">\r\n                                <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call here\r\n        const fireStore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authId = getState().firebase.auth.uid\r\n        fireStore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport posed, { PoseGroup } from 'react-pose';\n\nconst RouteContainer = posed.div({\n  enter: { opacity: 1, delay: 50, beforeChildren: true },\n  exit: { opacity: 0 }\n});\n\nclass App extends Component {\n  render() {\n    console.log(this.props)\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Route render={({ location }) => (\n            <PoseGroup>\n              <RouteContainer key={location.pathname}>\n                <Switch location={location}>\n                  <Route exact path='/' component={Dashboard} />\n                  <Route path='/project/:id' component={ProjectDetails} />\n                  <Route path='/signin' component={SignIn} />\n                  <Route path='/signup' component={SignUp} />\n                  <Route path='/createProject' component={CreateProject} />\n                </Switch>\n              </RouteContainer>\n            </PoseGroup>\n          )} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'Collect all stars', content: 'bla bla bla' },\r\n        { id: '2', title: 'Egg Hunt', content: 'bla bla bla' },\r\n        { id: '3', title: 'Sleep', content: 'bla bla bla' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created poject', action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase : firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyDT2n_E6rGn4B21Dz2-YbzAmvvqJJEzwWQ\",\r\n    authDomain: \"marioplan-a1a82.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-a1a82.firebaseio.com\",\r\n    projectId: \"marioplan-a1a82\",\r\n    storageBucket: \"marioplan-a1a82.appspot.com\",\r\n    messagingSenderId: \"492697358615\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})"],"sourceRoot":""}